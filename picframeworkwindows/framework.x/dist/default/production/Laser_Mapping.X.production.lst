

Microchip Technology PIC18 LITE Macro Assembler V1.21 build 54009 
                                                                                               Fri Dec 13 15:27:59 2013

Microchip Technology Omniscient Code Generator (Lite mode) build 54009
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    25  0000                     
    26                           	psect	idataCOMRAM
    27  007A0C                     __pidataCOMRAM:
    28                           	opt stack 0
    29                           
    30                           ;initializer for laser_read@F8891
    31  007A0C  42                 	db	66
    32  007A0D  00                 	db	0
    33  0000                     _ANSELA	set	3896
    34  0000                     _ANSELB	set	3897
    35  0000                     _ANSELC	set	3898
    36  0000                     _ANSELD	set	3899
    37  0000                     _ANSELE	set	3900
    38  0000                     _BAUDCON1bits	set	4024
    39  0000                     _BAUDCON2bits	set	3952
    40  0000                     _LATAbits	set	3977
    41  0000                     _PIR1bits	set	3998
    42  0000                     _PIR3bits	set	4004
    43  0000                     _RCREG1	set	4014
    44  0000                     _RCREG2	set	3956
    45  0000                     _RCSTA1bits	set	4011
    46  0000                     _RCSTA2bits	set	3953
    47  0000                     _SPBRG1	set	4015
    48  0000                     _SPBRG2	set	3957
    49  0000                     _TRISAbits	set	3986
    50  0000                     _TRISCbits	set	3988
    51  0000                     _TRISDbits	set	3989
    52  0000                     _TXREG1	set	4013
    53  0000                     _TXREG2	set	3955
    54  0000                     _TXSTA1bits	set	4012
    55  0000                     _TXSTA2bits	set	3954
    56                           
    57                           	psect	nvCOMRAM
    58  000032                     __pnvCOMRAM:
    59                           	opt stack 0
    60  000032                     _uart_1_data_p:
    61                           	opt stack 0
    62  000032                     	ds	2
    63  000034                     _uart_2_data_p:
    64                           	opt stack 0
    65  000034                     	ds	2
    66                           
    67                           ; #config settings
    68  0000                     
    69                           	psect	cinit
    70  007A0E                     __pcinit:
    71                           	opt stack 0
    72  007A0E                     start_initialization:
    73                           	opt stack 0
    74  007A0E                     __initialization:
    75                           	opt stack 0
    76                           
    77                           ; Initialize objects allocated to COMRAM (2 bytes)
    78                           ; load TBLPTR registers with __pidataCOMRAM
    79  007A0E  0E0C               	movlw	low __pidataCOMRAM
    80  007A10  6EF6               	movwf	tblptrl,c
    81  007A12  0E7A               	movlw	high __pidataCOMRAM
    82  007A14  6EF7               	movwf	tblptrh,c
    83  007A16  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    84  007A18  6EF8               	movwf	tblptru,c
    85  007A1A  0009               	tblrd		*+	;fetch initializer
    86  007A1C  CFF5 F036          	movff	tablat,__pdataCOMRAM
    87  007A20  0009               	tblrd		*+	;fetch initializer
    88  007A22  CFF5 F037          	movff	tablat,__pdataCOMRAM+1
    89  007A26                     end_of_initialization:
    90                           	opt stack 0
    91  007A26                     __end_of__initialization:
    92                           	opt stack 0
    93  007A26  0100               	movlb	0
    94  007A28  EF1E  F03F         	goto	_main	;jump to C main() function
    95                           tblptru	equ	0xFF8
    96                           tblptrh	equ	0xFF7
    97                           tblptrl	equ	0xFF6
    98                           tablat	equ	0xFF5
    99                           
   100                           	psect	dataCOMRAM
   101  000036                     __pdataCOMRAM:
   102                           	opt stack 0
   103  000036                     laser_read@F8891:
   104                           	opt stack 0
   105  000036                     	ds	2
   106                           tblptru	equ	0xFF8
   107                           tblptrh	equ	0xFF7
   108                           tblptrl	equ	0xFF6
   109                           tablat	equ	0xFF5
   110                           
   111                           	psect	cstackBANK1
   112  000100                     __pcstackBANK1:
   113                           	opt stack 0
   114  000100                     main@uart_data:
   115                           	opt stack 0
   116                           
   117                           ; 256 bytes @ 0x0
   118  000100                     	ds	256
   119                           tblptru	equ	0xFF8
   120                           tblptrh	equ	0xFF7
   121                           tblptrl	equ	0xFF6
   122                           tablat	equ	0xFF5
   123                           
   124                           	psect	cstackCOMRAM
   125  000001                     __pcstackCOMRAM:
   126                           	opt stack 0
   127  000001                     ?_UART1_Init:
   128                           	opt stack 0
   129  000001                     ?_UART2_Init:
   130                           	opt stack 0
   131  000001                     ??_move_motor:
   132  000001                     ?_UART1_Write:
   133                           	opt stack 0
   134  000001                     ?_UART2_Write:
   135                           	opt stack 0
   136  000001                     ?_UART2_Read:
   137                           	opt stack 0
   138  000001                     ?___lmul:
   139                           	opt stack 0
   140  000001                     ?___lldiv:
   141                           	opt stack 0
   142  000001                     UART1_Init@data:
   143                           	opt stack 0
   144  000001                     UART2_Init@data:
   145                           	opt stack 0
   146  000001                     UART1_Write@c:
   147                           	opt stack 0
   148  000001                     UART2_Write@c:
   149                           	opt stack 0
   150  000001                     UART2_Read@c:
   151                           	opt stack 0
   152  000001                     ___lldiv@dividend:
   153                           	opt stack 0
   154  000001                     ___lmul@multiplier:
   155                           	opt stack 0
   156                           
   157                           ; 4 bytes @ 0x0
   158  000001                     	ds	2
   159  000003                     UART1_Write@length:
   160                           	opt stack 0
   161  000003                     UART2_Write@length:
   162                           	opt stack 0
   163                           
   164                           ; 2 bytes @ 0x2
   165  000003                     	ds	2
   166  000005                     ??_UART2_Write:
   167  000005                     UART1_Write@i:
   168                           	opt stack 0
   169  000005                     ___lldiv@divisor:
   170                           	opt stack 0
   171  000005                     ___lmul@multiplicand:
   172                           	opt stack 0
   173                           
   174                           ; 4 bytes @ 0x4
   175  000005                     	ds	1
   176  000006                     UART2_Write@i:
   177                           	opt stack 0
   178                           
   179                           ; 2 bytes @ 0x5
   180  000006                     	ds	1
   181  000007                     ?_wifi_write:
   182                           	opt stack 0
   183  000007                     wifi_write@total:
   184                           	opt stack 0
   185                           
   186                           ; 4 bytes @ 0x6
   187  000007                     	ds	1
   188  000008                     ??_laser_init:
   189  000008                     ?_laser_read:
   190                           	opt stack 0
   191                           
   192                           ; 4 bytes @ 0x7
   193  000008                     	ds	1
   194  000009                     ??___lldiv:
   195  000009                     laser_init@init:
   196                           	opt stack 0
   197  000009                     ___lmul@product:
   198                           	opt stack 0
   199                           
   200                           ; 4 bytes @ 0x8
   201  000009                     	ds	1
   202  00000A                     laser_init@resp:
   203                           	opt stack 0
   204  00000A                     ___lldiv@quotient:
   205                           	opt stack 0
   206                           
   207                           ; 4 bytes @ 0x9
   208  00000A                     	ds	1
   209  00000B                     ??_wifi_write:
   210                           
   211                           ; 0 bytes @ 0xA
   212  00000B                     	ds	1
   213  00000C                     ??_laser_read:
   214  00000C                     wifi_write@write:
   215                           	opt stack 0
   216                           
   217                           ; 4 bytes @ 0xB
   218  00000C                     	ds	2
   219  00000E                     ___lldiv@counter:
   220                           	opt stack 0
   221                           
   222                           ; 1 bytes @ 0xD
   223  00000E                     	ds	2
   224  000010                     wifi_write@newline:
   225                           	opt stack 0
   226                           
   227                           ; 1 bytes @ 0xF
   228  000010                     	ds	2
   229  000012                     laser_read@temp:
   230                           	opt stack 0
   231                           
   232                           ; 4 bytes @ 0x11
   233  000012                     	ds	4
   234  000016                     laser_read@read:
   235                           	opt stack 0
   236                           
   237                           ; 2 bytes @ 0x15
   238  000016                     	ds	2
   239  000018                     ??_main:
   240                           
   241                           ; 0 bytes @ 0x17
   242  000018                     	ds	4
   243  00001C                     main@lastdist:
   244                           	opt stack 0
   245                           
   246                           ; 4 bytes @ 0x1B
   247  00001C                     	ds	4
   248  000020                     main@total:
   249                           	opt stack 0
   250                           
   251                           ; 4 bytes @ 0x1F
   252  000020                     	ds	4
   253  000024                     main@currdist:
   254                           	opt stack 0
   255                           
   256                           ; 4 bytes @ 0x23
   257  000024                     	ds	4
   258  000028                     main@n:
   259                           	opt stack 0
   260                           
   261                           ; 2 bytes @ 0x27
   262  000028                     	ds	2
   263  00002A                     main@avgdist:
   264                           	opt stack 0
   265                           
   266                           ; 4 bytes @ 0x29
   267  00002A                     	ds	4
   268  00002E                     main@arcarea:
   269                           	opt stack 0
   270                           
   271                           ; 4 bytes @ 0x2D
   272  00002E                     	ds	4
   273                           tblptru	equ	0xFF8
   274                           tblptrh	equ	0xFF7
   275                           tblptrl	equ	0xFF6
   276                           tablat	equ	0xFF5
   277                           
   278 ;;
   279 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   280 ;;
   281 ;; *************** function _main *****************
   282 ;; Defined at:
   283 ;;		line 83 in file "main.c"
   284 ;; Parameters:    Size  Location     Type
   285 ;;		None
   286 ;; Auto vars:     Size  Location     Type
   287 ;;  n               2   39[COMRAM] int 
   288 ;;  uart_data     256    0[BANK1 ] struct .
   289 ;;  arcarea         4   45[COMRAM] unsigned long 
   290 ;;  avgdist         4   41[COMRAM] unsigned long 
   291 ;;  currdist        4   35[COMRAM] unsigned long 
   292 ;;  total           4   31[COMRAM] unsigned long 
   293 ;;  lastdist        4   27[COMRAM] unsigned long 
   294 ;; Return value:  Size  Location     Type
   295 ;;                  2   28[COMRAM] int 
   296 ;; Registers used:
   297 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   298 ;; Tracked objects:
   299 ;;		On entry : 0/0
   300 ;;		On exit  : 0/0
   301 ;;		Unchanged: 0/0
   302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   303 ;;      Params:         0       0       0       0       0       0       0
   304 ;;      Locals:        22       0     256       0       0       0       0
   305 ;;      Temps:          4       0       0       0       0       0       0
   306 ;;      Totals:        26       0     256       0       0       0       0
   307 ;;Total ram usage:      282 bytes
   308 ;; Hardware stack levels required when called:    2
   309 ;; This function calls:
   310 ;;		_UART1_Init
   311 ;;		_UART2_Init
   312 ;;		_laser_init
   313 ;;		_laser_read
   314 ;;		_move_motor
   315 ;;		_wifi_write
   316 ;;		___lmul
   317 ;;		___lldiv
   318 ;; This function is called by:
   319 ;;		Startup code after reset
   320 ;; This function uses a non-reentrant model
   321 ;;
   322                           
   323                           	psect	text0
   324  007E3C                     __ptext0:
   325                           	opt stack 0
   326  007E3C                     _main:
   327                           	opt stack 29
   328                           
   329                           ;main.c: 84: ANSELA = 0x0;
   330                           
   331                           ;incstack = 0
   332                           ;incstack = 0
   333  007E3C  0E00               	movlw	0
   334  007E3E  010F               	movlb	15	; () banked
   335  007E40  010F               	movlb	15	; () banked
   336  007E42  6F38               	movwf	56,b	;volatile
   337                           
   338                           ;main.c: 85: ANSELB = 0x0;
   339  007E44  0E00               	movlw	0
   340  007E46  010F               	movlb	15	; () banked
   341  007E48  010F               	movlb	15	; () banked
   342  007E4A  6F39               	movwf	57,b	;volatile
   343                           
   344                           ;main.c: 86: ANSELC = 0x0;
   345  007E4C  0E00               	movlw	0
   346  007E4E  010F               	movlb	15	; () banked
   347  007E50  010F               	movlb	15	; () banked
   348  007E52  6F3A               	movwf	58,b	;volatile
   349                           
   350                           ;main.c: 87: ANSELD = 0x0;
   351  007E54  0E00               	movlw	0
   352  007E56  010F               	movlb	15	; () banked
   353  007E58  010F               	movlb	15	; () banked
   354  007E5A  6F3B               	movwf	59,b	;volatile
   355                           
   356                           ;main.c: 88: ANSELE = 0x0;
   357  007E5C  0E00               	movlw	0
   358  007E5E  010F               	movlb	15	; () banked
   359  007E60  010F               	movlb	15	; () banked
   360  007E62  6F3C               	movwf	60,b	;volatile
   361                           
   362                           ; BSR set to: 15
   363                           ;main.c: 90: UART_DATA uart_data;
   364                           ;main.c: 91: UART1_Init(&uart_data);
   365  007E64  0101               	movlb	1	; () banked
   366  007E66  0E01               	movlw	high main@uart_data
   367  007E68  6E02               	movwf	?_UART1_Init+1,c
   368  007E6A  0101               	movlb	1	; () banked
   369  007E6C  0E00               	movlw	low main@uart_data
   370  007E6E  6E01               	movwf	?_UART1_Init,c
   371  007E70  ECC2  F03D         	call	_UART1_Init	;wreg free
   372                           
   373                           ;main.c: 92: UART2_Init(&uart_data);
   374  007E74  0101               	movlb	1	; () banked
   375  007E76  0E01               	movlw	high main@uart_data
   376  007E78  6E02               	movwf	?_UART2_Init+1,c
   377  007E7A  0101               	movlb	1	; () banked
   378  007E7C  0E00               	movlw	low main@uart_data
   379  007E7E  6E01               	movwf	?_UART2_Init,c
   380  007E80  ECF3  F03D         	call	_UART2_Init	;wreg free
   381                           
   382                           ;main.c: 94: TRISAbits.TRISA0 = 0;
   383  007E84  9092               	bcf	3986,0,c	;volatile
   384                           
   385                           ;main.c: 95: TRISAbits.TRISA1 = 0;
   386  007E86  9292               	bcf	3986,1,c	;volatile
   387                           
   388                           ;main.c: 97: LATAbits.LATA1 = 0;
   389  007E88  9289               	bcf	3977,1,c	;volatile
   390                           
   391                           ;main.c: 101: laser_init();
   392  007E8A  EC5A  F03D         	call	_laser_init	;wreg free
   393                           
   394                           ;main.c: 114: unsigned long lastdist;
   395                           ;main.c: 115: unsigned long arcarea;
   396                           ;main.c: 116: unsigned long currdist = laser_read();
   397  007E8E  ECA9  F03E         	call	_laser_read	;wreg free
   398  007E92  C00B  F027         	movff	?_laser_read+3,main@currdist+3
   399  007E96  C00A  F026         	movff	?_laser_read+2,main@currdist+2
   400  007E9A  C009  F025         	movff	?_laser_read+1,main@currdist+1
   401  007E9E  C008  F024         	movff	?_laser_read,main@currdist
   402                           
   403                           ;main.c: 118: unsigned long avgdist;
   404                           ;main.c: 119: unsigned long total = 0;
   405  007EA2  0E00               	movlw	0
   406  007EA4  6E20               	movwf	main@total,c
   407  007EA6  0E00               	movlw	0
   408  007EA8  6E21               	movwf	main@total+1,c
   409  007EAA  0E00               	movlw	0
   410  007EAC  6E22               	movwf	main@total+2,c
   411  007EAE  0E00               	movlw	0
   412  007EB0  6E23               	movwf	main@total+3,c
   413                           
   414                           ;main.c: 121: for (int n = 0; n < 100; n++) {
   415  007EB2  0E00               	movlw	0
   416  007EB4  6E29               	movwf	main@n+1,c
   417  007EB6  0E00               	movlw	0
   418  007EB8  6E28               	movwf	main@n,c
   419  007EBA  5029               	movf	main@n+1,w,c
   420  007EBC  0A80               	xorlw	128
   421  007EBE  0F80               	addlw	-128
   422  007EC0  0E64               	movlw	100
   423  007EC2  B4D8               	btfsc	status,2,c
   424  007EC4  5C28               	subwf	main@n,w,c
   425  007EC6  B0D8               	btfsc	status,0,c
   426  007EC8  D09A               	goto	l31
   427                           
   428                           ;main.c: 122: move_motor();
   429  007ECA  EC24  F03E         	call	_move_motor	;wreg free
   430                           
   431                           ;main.c: 123: move_motor();
   432  007ECE  EC24  F03E         	call	_move_motor	;wreg free
   433                           
   434                           ;main.c: 124: lastdist = currdist;
   435  007ED2  C024  F01C         	movff	main@currdist,main@lastdist
   436  007ED6  C025  F01D         	movff	main@currdist+1,main@lastdist+1
   437  007EDA  C026  F01E         	movff	main@currdist+2,main@lastdist+2
   438  007EDE  C027  F01F         	movff	main@currdist+3,main@lastdist+3
   439                           
   440                           ;main.c: 125: currdist = laser_read();
   441  007EE2  ECA9  F03E         	call	_laser_read	;wreg free
   442  007EE6  C00B  F027         	movff	?_laser_read+3,main@currdist+3
   443  007EEA  C00A  F026         	movff	?_laser_read+2,main@currdist+2
   444  007EEE  C009  F025         	movff	?_laser_read+1,main@currdist+1
   445  007EF2  C008  F024         	movff	?_laser_read,main@currdist
   446                           
   447                           ;main.c: 127: avgdist = (currdist + lastdist);
   448  007EF6  501C               	movf	main@lastdist,w,c
   449  007EF8  2424               	addwf	main@currdist,w,c
   450  007EFA  6E2A               	movwf	main@avgdist,c
   451  007EFC  501D               	movf	main@lastdist+1,w,c
   452  007EFE  2025               	addwfc	main@currdist+1,w,c
   453  007F00  6E2B               	movwf	main@avgdist+1,c
   454  007F02  501E               	movf	main@lastdist+2,w,c
   455  007F04  2026               	addwfc	main@currdist+2,w,c
   456  007F06  6E2C               	movwf	main@avgdist+2,c
   457  007F08  501F               	movf	main@lastdist+3,w,c
   458  007F0A  2027               	addwfc	main@currdist+3,w,c
   459  007F0C  6E2D               	movwf	main@avgdist+3,c
   460                           
   461                           ;main.c: 128: avgdist = (avgdist / 2);
   462  007F0E  C02A  F018         	movff	main@avgdist,??_main
   463  007F12  C02B  F019         	movff	main@avgdist+1,??_main+1
   464  007F16  C02C  F01A         	movff	main@avgdist+2,??_main+2
   465  007F1A  C02D  F01B         	movff	main@avgdist+3,??_main+3
   466  007F1E  90D8               	bcf	status,0,c
   467  007F20  321B               	rrcf	??_main+3,f,c
   468  007F22  321A               	rrcf	??_main+2,f,c
   469  007F24  3219               	rrcf	??_main+1,f,c
   470  007F26  3218               	rrcf	??_main,f,c
   471  007F28  C01B  F02D         	movff	??_main+3,main@avgdist+3
   472  007F2C  C01A  F02C         	movff	??_main+2,main@avgdist+2
   473  007F30  C019  F02B         	movff	??_main+1,main@avgdist+1
   474  007F34  C018  F02A         	movff	??_main,main@avgdist
   475                           
   476                           ;main.c: 129: arcarea = avgdist*avgdist;
   477  007F38  C02A  F001         	movff	main@avgdist,?___lmul
   478  007F3C  C02B  F002         	movff	main@avgdist+1,?___lmul+1
   479  007F40  C02C  F003         	movff	main@avgdist+2,?___lmul+2
   480  007F44  C02D  F004         	movff	main@avgdist+3,?___lmul+3
   481  007F48  C02A  F005         	movff	main@avgdist,?___lmul+4
   482  007F4C  C02B  F006         	movff	main@avgdist+1,?___lmul+5
   483  007F50  C02C  F007         	movff	main@avgdist+2,?___lmul+6
   484  007F54  C02D  F008         	movff	main@avgdist+3,?___lmul+7
   485  007F58  EC97  F03D         	call	___lmul	;wreg free
   486  007F5C  C004  F031         	movff	?___lmul+3,main@arcarea+3
   487  007F60  C003  F030         	movff	?___lmul+2,main@arcarea+2
   488  007F64  C002  F02F         	movff	?___lmul+1,main@arcarea+1
   489  007F68  C001  F02E         	movff	?___lmul,main@arcarea
   490                           
   491                           ;main.c: 130: arcarea = (arcarea / 10000);
   492  007F6C  C02E  F001         	movff	main@arcarea,?___lldiv
   493  007F70  C02F  F002         	movff	main@arcarea+1,?___lldiv+1
   494  007F74  C030  F003         	movff	main@arcarea+2,?___lldiv+2
   495  007F78  C031  F004         	movff	main@arcarea+3,?___lldiv+3
   496  007F7C  0E10               	movlw	16
   497  007F7E  6E05               	movwf	?___lldiv+4,c
   498  007F80  0E27               	movlw	39
   499  007F82  6E06               	movwf	?___lldiv+5,c
   500  007F84  0E00               	movlw	0
   501  007F86  6E07               	movwf	?___lldiv+6,c
   502  007F88  0E00               	movlw	0
   503  007F8A  6E08               	movwf	?___lldiv+7,c
   504  007F8C  EC66  F03E         	call	___lldiv	;wreg free
   505  007F90  C004  F031         	movff	?___lldiv+3,main@arcarea+3
   506  007F94  C003  F030         	movff	?___lldiv+2,main@arcarea+2
   507  007F98  C002  F02F         	movff	?___lldiv+1,main@arcarea+1
   508  007F9C  C001  F02E         	movff	?___lldiv,main@arcarea
   509                           
   510                           ;main.c: 131: arcarea = arcarea * 314;
   511  007FA0  C02E  F001         	movff	main@arcarea,?___lmul
   512  007FA4  C02F  F002         	movff	main@arcarea+1,?___lmul+1
   513  007FA8  C030  F003         	movff	main@arcarea+2,?___lmul+2
   514  007FAC  C031  F004         	movff	main@arcarea+3,?___lmul+3
   515  007FB0  0E3A               	movlw	58
   516  007FB2  6E05               	movwf	?___lmul+4,c
   517  007FB4  0E01               	movlw	1
   518  007FB6  6E06               	movwf	?___lmul+5,c
   519  007FB8  0E00               	movlw	0
   520  007FBA  6E07               	movwf	?___lmul+6,c
   521  007FBC  0E00               	movlw	0
   522  007FBE  6E08               	movwf	?___lmul+7,c
   523  007FC0  EC97  F03D         	call	___lmul	;wreg free
   524  007FC4  C004  F031         	movff	?___lmul+3,main@arcarea+3
   525  007FC8  C003  F030         	movff	?___lmul+2,main@arcarea+2
   526  007FCC  C002  F02F         	movff	?___lmul+1,main@arcarea+1
   527  007FD0  C001  F02E         	movff	?___lmul,main@arcarea
   528                           
   529                           ;main.c: 132: total += arcarea;
   530  007FD4  502E               	movf	main@arcarea,w,c
   531  007FD6  2620               	addwf	main@total,f,c
   532  007FD8  502F               	movf	main@arcarea+1,w,c
   533  007FDA  2221               	addwfc	main@total+1,f,c
   534  007FDC  5030               	movf	main@arcarea+2,w,c
   535  007FDE  2222               	addwfc	main@total+2,f,c
   536  007FE0  5031               	movf	main@arcarea+3,w,c
   537  007FE2  2223               	addwfc	main@total+3,f,c
   538                           
   539                           ;main.c: 133: wifi_write(total);
   540  007FE4  C020  F007         	movff	main@total,?_wifi_write
   541  007FE8  C021  F008         	movff	main@total+1,?_wifi_write+1
   542  007FEC  C022  F009         	movff	main@total+2,?_wifi_write+2
   543  007FF0  C023  F00A         	movff	main@total+3,?_wifi_write+3
   544  007FF4  EC77  F03D         	call	_wifi_write	;wreg free
   545  007FF8  4A28               	infsnz	main@n,f,c
   546  007FFA  2A29               	incf	main@n+1,f,c
   547  007FFC  D75E               	goto	L1
   548  007FFE                     l31:
   549  007FFE  D7FF               	goto	l31
   550  008000                     __end_of_main:
   551                           	opt stack 0
   552                           tblptru	equ	0xFF8
   553                           tblptrh	equ	0xFF7
   554                           tblptrl	equ	0xFF6
   555                           tablat	equ	0xFF5
   556                           status	equ	0xFD8
   557                           
   558 ;; *************** function ___lldiv *****************
   559 ;; Defined at:
   560 ;;		line 10 in file "/Applications/microchip/xc8/v1.21/sources/common/lldiv.c"
   561 ;; Parameters:    Size  Location     Type
   562 ;;  dividend        4    0[COMRAM] unsigned long 
   563 ;;  divisor         4    4[COMRAM] unsigned long 
   564 ;; Auto vars:     Size  Location     Type
   565 ;;  quotient        4    9[COMRAM] unsigned long 
   566 ;;  counter         1   13[COMRAM] unsigned char 
   567 ;; Return value:  Size  Location     Type
   568 ;;                  4    0[COMRAM] unsigned long 
   569 ;; Registers used:
   570 ;;		wreg, status,2, status,0
   571 ;; Tracked objects:
   572 ;;		On entry : 0/0
   573 ;;		On exit  : 0/0
   574 ;;		Unchanged: 0/0
   575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   576 ;;      Params:         8       0       0       0       0       0       0
   577 ;;      Locals:         5       0       0       0       0       0       0
   578 ;;      Temps:          1       0       0       0       0       0       0
   579 ;;      Totals:        14       0       0       0       0       0       0
   580 ;;Total ram usage:       14 bytes
   581 ;; Hardware stack levels used:    1
   582 ;; This function calls:
   583 ;;		Nothing
   584 ;; This function is called by:
   585 ;;		_main
   586 ;; This function uses a non-reentrant model
   587 ;;
   588                           
   589                           	psect	text1
   590  007CCC                     __ptext1:
   591                           	opt stack 0
   592  007CCC                     ___lldiv:
   593                           	opt stack 30
   594                           
   595                           ;incstack = 0
   596                           ;incstack = 0
   597  007CCC  0E00               	movlw	0
   598  007CCE  6E0A               	movwf	___lldiv@quotient,c
   599  007CD0  0E00               	movlw	0
   600  007CD2  6E0B               	movwf	___lldiv@quotient+1,c
   601  007CD4  0E00               	movlw	0
   602  007CD6  6E0C               	movwf	___lldiv@quotient+2,c
   603  007CD8  0E00               	movlw	0
   604  007CDA  6E0D               	movwf	___lldiv@quotient+3,c
   605  007CDC  5008               	movf	___lldiv@divisor+3,w,c
   606  007CDE  1005               	iorwf	___lldiv@divisor,w,c
   607  007CE0  1006               	iorwf	___lldiv@divisor+1,w,c
   608  007CE2  1007               	iorwf	___lldiv@divisor+2,w,c
   609  007CE4  B4D8               	btfsc	status,2,c
   610  007CE6  D02C               	goto	l596
   611  007CE8  6E09               	movwf	??___lldiv& (0+255),c
   612  007CEA  0E01               	movlw	1
   613  007CEC  6E0E               	movwf	___lldiv@counter,c
   614  007CEE  5009               	movf	??___lldiv& (0+255),w,c
   615  007CF0  D006               	goto	l901
   616  007CF2                     l899:
   617  007CF2  90D8               	bcf	status,0,c
   618  007CF4  3605               	rlcf	___lldiv@divisor,f,c
   619  007CF6  3606               	rlcf	___lldiv@divisor+1,f,c
   620  007CF8  3607               	rlcf	___lldiv@divisor+2,f,c
   621  007CFA  3608               	rlcf	___lldiv@divisor+3,f,c
   622  007CFC  2A0E               	incf	___lldiv@counter,f,c
   623  007CFE                     l901:
   624  007CFE  AE08               	btfss	___lldiv@divisor+3,7,c
   625  007D00  D7F8               	goto	l899
   626  007D02                     l903:
   627  007D02  90D8               	bcf	status,0,c
   628  007D04  360A               	rlcf	___lldiv@quotient,f,c
   629  007D06  360B               	rlcf	___lldiv@quotient+1,f,c
   630  007D08  360C               	rlcf	___lldiv@quotient+2,f,c
   631  007D0A  360D               	rlcf	___lldiv@quotient+3,f,c
   632  007D0C  5005               	movf	___lldiv@divisor,w,c
   633  007D0E  5C01               	subwf	___lldiv@dividend,w,c
   634  007D10  5006               	movf	___lldiv@divisor+1,w,c
   635  007D12  5802               	subwfb	___lldiv@dividend+1,w,c
   636  007D14  5007               	movf	___lldiv@divisor+2,w,c
   637  007D16  5803               	subwfb	___lldiv@dividend+2,w,c
   638  007D18  5008               	movf	___lldiv@divisor+3,w,c
   639  007D1A  5804               	subwfb	___lldiv@dividend+3,w,c
   640  007D1C  A0D8               	btfss	status,0,c
   641  007D1E  D009               	goto	l911
   642  007D20  5005               	movf	___lldiv@divisor,w,c
   643  007D22  5E01               	subwf	___lldiv@dividend,f,c
   644  007D24  5006               	movf	___lldiv@divisor+1,w,c
   645  007D26  5A02               	subwfb	___lldiv@dividend+1,f,c
   646  007D28  5007               	movf	___lldiv@divisor+2,w,c
   647  007D2A  5A03               	subwfb	___lldiv@dividend+2,f,c
   648  007D2C  5008               	movf	___lldiv@divisor+3,w,c
   649  007D2E  5A04               	subwfb	___lldiv@dividend+3,f,c
   650  007D30  800A               	bsf	___lldiv@quotient,0,c
   651  007D32                     l911:
   652  007D32  90D8               	bcf	status,0,c
   653  007D34  3208               	rrcf	___lldiv@divisor+3,f,c
   654  007D36  3207               	rrcf	___lldiv@divisor+2,f,c
   655  007D38  3206               	rrcf	___lldiv@divisor+1,f,c
   656  007D3A  3205               	rrcf	___lldiv@divisor,f,c
   657  007D3C  2E0E               	decfsz	___lldiv@counter,f,c
   658  007D3E  D7E1               	goto	l903
   659  007D40                     l596:
   660  007D40  C00A  F001         	movff	___lldiv@quotient,?___lldiv
   661  007D44  C00B  F002         	movff	___lldiv@quotient+1,?___lldiv+1
   662  007D48  C00C  F003         	movff	___lldiv@quotient+2,?___lldiv+2
   663  007D4C  C00D  F004         	movff	___lldiv@quotient+3,?___lldiv+3
   664  007D50  0012               	return	
   665  007D52                     __end_of___lldiv:
   666                           	opt stack 0
   667                           tblptru	equ	0xFF8
   668                           tblptrh	equ	0xFF7
   669                           tblptrl	equ	0xFF6
   670                           tablat	equ	0xFF5
   671                           status	equ	0xFD8
   672                           
   673 ;; *************** function ___lmul *****************
   674 ;; Defined at:
   675 ;;		line 3 in file "/Applications/microchip/xc8/v1.21/sources/common/lmul.c"
   676 ;; Parameters:    Size  Location     Type
   677 ;;  multiplier      4    0[COMRAM] unsigned long 
   678 ;;  multiplicand    4    4[COMRAM] unsigned long 
   679 ;; Auto vars:     Size  Location     Type
   680 ;;  product         4    8[COMRAM] unsigned long 
   681 ;; Return value:  Size  Location     Type
   682 ;;                  4    0[COMRAM] unsigned long 
   683 ;; Registers used:
   684 ;;		wreg, status,2, status,0
   685 ;; Tracked objects:
   686 ;;		On entry : 0/0
   687 ;;		On exit  : 0/0
   688 ;;		Unchanged: 0/0
   689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   690 ;;      Params:         8       0       0       0       0       0       0
   691 ;;      Locals:         4       0       0       0       0       0       0
   692 ;;      Temps:          0       0       0       0       0       0       0
   693 ;;      Totals:        12       0       0       0       0       0       0
   694 ;;Total ram usage:       12 bytes
   695 ;; Hardware stack levels used:    1
   696 ;; This function calls:
   697 ;;		Nothing
   698 ;; This function is called by:
   699 ;;		_main
   700 ;; This function uses a non-reentrant model
   701 ;;
   702                           
   703                           	psect	text2
   704  007B2E                     __ptext2:
   705                           	opt stack 0
   706  007B2E                     ___lmul:
   707                           	opt stack 30
   708                           
   709                           ;incstack = 0
   710                           ;incstack = 0
   711  007B2E  0E00               	movlw	0
   712  007B30  6E09               	movwf	___lmul@product,c
   713  007B32  0E00               	movlw	0
   714  007B34  6E0A               	movwf	___lmul@product+1,c
   715  007B36  0E00               	movlw	0
   716  007B38  6E0B               	movwf	___lmul@product+2,c
   717  007B3A  0E00               	movlw	0
   718  007B3C  6E0C               	movwf	___lmul@product+3,c
   719  007B3E                     l885:
   720  007B3E  A001               	btfss	___lmul@multiplier,0,c
   721  007B40  D008               	goto	l889
   722  007B42  5005               	movf	___lmul@multiplicand,w,c
   723  007B44  2609               	addwf	___lmul@product,f,c
   724  007B46  5006               	movf	___lmul@multiplicand+1,w,c
   725  007B48  220A               	addwfc	___lmul@product+1,f,c
   726  007B4A  5007               	movf	___lmul@multiplicand+2,w,c
   727  007B4C  220B               	addwfc	___lmul@product+2,f,c
   728  007B4E  5008               	movf	___lmul@multiplicand+3,w,c
   729  007B50  220C               	addwfc	___lmul@product+3,f,c
   730  007B52                     l889:
   731  007B52  90D8               	bcf	status,0,c
   732  007B54  3605               	rlcf	___lmul@multiplicand,f,c
   733  007B56  3606               	rlcf	___lmul@multiplicand+1,f,c
   734  007B58  3607               	rlcf	___lmul@multiplicand+2,f,c
   735  007B5A  3608               	rlcf	___lmul@multiplicand+3,f,c
   736  007B5C  90D8               	bcf	status,0,c
   737  007B5E  3204               	rrcf	___lmul@multiplier+3,f,c
   738  007B60  3203               	rrcf	___lmul@multiplier+2,f,c
   739  007B62  3202               	rrcf	___lmul@multiplier+1,f,c
   740  007B64  3201               	rrcf	___lmul@multiplier,f,c
   741  007B66  5004               	movf	___lmul@multiplier+3,w,c
   742  007B68  1001               	iorwf	___lmul@multiplier,w,c
   743  007B6A  1002               	iorwf	___lmul@multiplier+1,w,c
   744  007B6C  1003               	iorwf	___lmul@multiplier+2,w,c
   745  007B6E  A4D8               	btfss	status,2,c
   746  007B70  D7E6               	goto	l885
   747  007B72  C009  F001         	movff	___lmul@product,?___lmul
   748  007B76  C00A  F002         	movff	___lmul@product+1,?___lmul+1
   749  007B7A  C00B  F003         	movff	___lmul@product+2,?___lmul+2
   750  007B7E  C00C  F004         	movff	___lmul@product+3,?___lmul+3
   751  007B82  0012               	return	
   752  007B84                     __end_of___lmul:
   753                           	opt stack 0
   754                           tblptru	equ	0xFF8
   755                           tblptrh	equ	0xFF7
   756                           tblptrl	equ	0xFF6
   757                           tablat	equ	0xFF5
   758                           status	equ	0xFD8
   759                           
   760 ;; *************** function _wifi_write *****************
   761 ;; Defined at:
   762 ;;		line 141 in file "operations.c"
   763 ;; Parameters:    Size  Location     Type
   764 ;;  total           4    6[COMRAM] unsigned long 
   765 ;; Auto vars:     Size  Location     Type
   766 ;;  write           4   11[COMRAM] unsigned char [4]
   767 ;;  newline         1   15[COMRAM] unsigned char 
   768 ;; Return value:  Size  Location     Type
   769 ;;		None               void
   770 ;; Registers used:
   771 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   772 ;; Tracked objects:
   773 ;;		On entry : 0/0
   774 ;;		On exit  : 0/0
   775 ;;		Unchanged: 0/0
   776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   777 ;;      Params:         4       0       0       0       0       0       0
   778 ;;      Locals:         5       0       0       0       0       0       0
   779 ;;      Temps:          1       0       0       0       0       0       0
   780 ;;      Totals:        10       0       0       0       0       0       0
   781 ;;Total ram usage:       10 bytes
   782 ;; Hardware stack levels used:    1
   783 ;; Hardware stack levels required when called:    1
   784 ;; This function calls:
   785 ;;		_UART1_Write
   786 ;; This function is called by:
   787 ;;		_main
   788 ;; This function uses a non-reentrant model
   789 ;;
   790                           
   791                           	psect	text3
   792  007AEE                     __ptext3:
   793                           	opt stack 0
   794  007AEE                     _wifi_write:
   795                           	opt stack 29
   796                           
   797                           ;operations.c: 142: char write[4];
   798                           ;operations.c: 143: write[3] = total >> 24;
   799                           
   800                           ;incstack = 0
   801                           ;incstack = 0
   802  007AEE  C00A  F00F         	movff	wifi_write@total+3,wifi_write@write+3
   803                           
   804                           ;operations.c: 144: write[2] = total >> 16;
   805  007AF2  C009  F00E         	movff	wifi_write@total+2,wifi_write@write+2
   806                           
   807                           ;operations.c: 145: write[1] = total >> 8;
   808  007AF6  C008  F00D         	movff	wifi_write@total+1,wifi_write@write+1
   809                           
   810                           ;operations.c: 146: write[0] = total;
   811  007AFA  C007  F00C         	movff	wifi_write@total,wifi_write@write
   812                           
   813                           ;operations.c: 148: UART1_Write(&write, 4);
   814  007AFE  0E00               	movlw	high wifi_write@write
   815  007B00  6E02               	movwf	?_UART1_Write+1,c
   816  007B02  0E0C               	movlw	low wifi_write@write
   817  007B04  6E01               	movwf	?_UART1_Write,c
   818  007B06  0E00               	movlw	0
   819  007B08  6E04               	movwf	?_UART1_Write+3,c
   820  007B0A  0E04               	movlw	4
   821  007B0C  6E03               	movwf	?_UART1_Write+2,c
   822  007B0E  EC26  F03D         	call	_UART1_Write	;wreg free
   823                           
   824                           ;operations.c: 149: char newline = '\n';
   825  007B12  6E0B               	movwf	??_wifi_write& (0+255),c
   826  007B14  0E0A               	movlw	10
   827  007B16  6E10               	movwf	wifi_write@newline,c
   828  007B18  500B               	movf	??_wifi_write& (0+255),w,c
   829                           
   830                           ;operations.c: 150: UART1_Write(newline, 1);
   831  007B1A  C010  F001         	movff	wifi_write@newline,?_UART1_Write
   832  007B1E  6A02               	clrf	?_UART1_Write+1,c
   833  007B20  0E00               	movlw	0
   834  007B22  6E04               	movwf	?_UART1_Write+3,c
   835  007B24  0E01               	movlw	1
   836  007B26  6E03               	movwf	?_UART1_Write+2,c
   837  007B28  EC26  F03D         	call	_UART1_Write	;wreg free
   838  007B2C  0012               	return	
   839  007B2E                     __end_of_wifi_write:
   840                           	opt stack 0
   841                           tblptru	equ	0xFF8
   842                           tblptrh	equ	0xFF7
   843                           tblptrl	equ	0xFF6
   844                           tablat	equ	0xFF5
   845                           status	equ	0xFD8
   846                           
   847 ;; *************** function _UART1_Write *****************
   848 ;; Defined at:
   849 ;;		line 61 in file "my_UART.c"
   850 ;; Parameters:    Size  Location     Type
   851 ;;  c               2    0[COMRAM] PTR unsigned char 
   852 ;;		 -> RAM(1535), wifi_write@write(4), 
   853 ;;  length          2    2[COMRAM] int 
   854 ;; Auto vars:     Size  Location     Type
   855 ;;  i               2    4[COMRAM] int 
   856 ;; Return value:  Size  Location     Type
   857 ;;		None               void
   858 ;; Registers used:
   859 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   860 ;; Tracked objects:
   861 ;;		On entry : 0/0
   862 ;;		On exit  : 0/0
   863 ;;		Unchanged: 0/0
   864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   865 ;;      Params:         4       0       0       0       0       0       0
   866 ;;      Locals:         2       0       0       0       0       0       0
   867 ;;      Temps:          0       0       0       0       0       0       0
   868 ;;      Totals:         6       0       0       0       0       0       0
   869 ;;Total ram usage:        6 bytes
   870 ;; Hardware stack levels used:    1
   871 ;; This function calls:
   872 ;;		Nothing
   873 ;; This function is called by:
   874 ;;		_wifi_write
   875 ;; This function uses a non-reentrant model
   876 ;;
   877                           
   878                           	psect	text4
   879  007A4C                     __ptext4:
   880                           	opt stack 0
   881  007A4C                     _UART1_Write:
   882                           	opt stack 29
   883                           
   884                           ;my_UART.c: 62: for (int i=length-1; i>=0; i--){
   885                           
   886                           ;incstack = 0
   887                           ;incstack = 0
   888  007A4C  0EFF               	movlw	255
   889  007A4E  2403               	addwf	UART1_Write@length,w,c
   890  007A50  6E05               	movwf	UART1_Write@i,c
   891  007A52  0EFF               	movlw	255
   892  007A54  2004               	addwfc	UART1_Write@length+1,w,c
   893  007A56  6E06               	movwf	UART1_Write@i+1,c
   894  007A58  BE06               	btfsc	UART1_Write@i+1,7,c
   895  007A5A  0012               	return	
   896                           
   897                           ;my_UART.c: 63: TXREG1 = c[i];
   898  007A5C  5005               	movf	UART1_Write@i,w,c
   899  007A5E  2401               	addwf	UART1_Write@c,w,c
   900  007A60  6ED9               	movwf	fsr2l,c
   901  007A62  5006               	movf	UART1_Write@i+1,w,c
   902  007A64  2002               	addwfc	UART1_Write@c+1,w,c
   903  007A66  6EDA               	movwf	fsr2h,c
   904  007A68  50DF               	movf	indf2,w,c
   905  007A6A  6EAD               	movwf	4013,c	;volatile
   906  007A6C  F000               	nop		;# 
   907  007A6E                     l81:
   908  007A6E  A89E               	btfss	3998,4,c	;volatile
   909  007A70  D7FE               	goto	l81
   910  007A72  0605               	decf	UART1_Write@i,f,c
   911  007A74  A0D8               	btfss	status,0,c
   912  007A76  0606               	decf	UART1_Write@i+1,f,c
   913  007A78  D7EF               	goto	L2
   914  007A7A                     __end_of_UART1_Write:
   915                           	opt stack 0
   916                           tblptru	equ	0xFF8
   917                           tblptrh	equ	0xFF7
   918                           tblptrl	equ	0xFF6
   919                           tablat	equ	0xFF5
   920                           indf2	equ	0xFDF
   921                           fsr2h	equ	0xFDA
   922                           fsr2l	equ	0xFD9
   923                           status	equ	0xFD8
   924                           
   925 ;; *************** function _move_motor *****************
   926 ;; Defined at:
   927 ;;		line 65 in file "operations.c"
   928 ;; Parameters:    Size  Location     Type
   929 ;;		None
   930 ;; Auto vars:     Size  Location     Type
   931 ;;		None
   932 ;; Return value:  Size  Location     Type
   933 ;;		None               void
   934 ;; Registers used:
   935 ;;		wreg
   936 ;; Tracked objects:
   937 ;;		On entry : 0/0
   938 ;;		On exit  : 0/0
   939 ;;		Unchanged: 0/0
   940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   941 ;;      Params:         0       0       0       0       0       0       0
   942 ;;      Locals:         0       0       0       0       0       0       0
   943 ;;      Temps:          1       0       0       0       0       0       0
   944 ;;      Totals:         1       0       0       0       0       0       0
   945 ;;Total ram usage:        1 bytes
   946 ;; Hardware stack levels used:    1
   947 ;; This function calls:
   948 ;;		Nothing
   949 ;; This function is called by:
   950 ;;		_main
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954                           	psect	text5
   955  007C48                     __ptext5:
   956                           	opt stack 0
   957  007C48                     _move_motor:
   958                           	opt stack 30
   959                           
   960                           ;operations.c: 66: LATAbits.LATA0 = 1;
   961                           
   962                           ;incstack = 0
   963                           ;incstack = 0
   964  007C48  8089               	bsf	3977,0,c	;volatile
   965                           
   966                           ;operations.c: 67: _delay((unsigned long)((10)*(48000000/4000.0)));
   967  007C4A  0E9C               	movlw	156
   968  007C4C  6E01               	movwf	??_move_motor& (0+255),c
   969  007C4E  0ED7               	movlw	215
   970  007C50                     u237:
   971  007C50  2EE8               	decfsz	wreg,f,c
   972  007C52  D7FE               	goto	u237
   973  007C54  2E01               	decfsz	??_move_motor& (0+255),f,c
   974  007C56  D7FC               	goto	u237
   975                           
   976                           ;operations.c: 68: _delay((unsigned long)((10)*(48000000/4000.0)));
   977  007C58  0E9C               	movlw	156
   978  007C5A  6E01               	movwf	??_move_motor& (0+255),c
   979  007C5C  0ED7               	movlw	215
   980  007C5E                     u247:
   981  007C5E  2EE8               	decfsz	wreg,f,c
   982  007C60  D7FE               	goto	u247
   983  007C62  2E01               	decfsz	??_move_motor& (0+255),f,c
   984  007C64  D7FC               	goto	u247
   985                           
   986                           ;operations.c: 69: _delay((unsigned long)((10)*(48000000/4000.0)));
   987  007C66  0E9C               	movlw	156
   988  007C68  6E01               	movwf	??_move_motor& (0+255),c
   989  007C6A  0ED7               	movlw	215
   990  007C6C                     u257:
   991  007C6C  2EE8               	decfsz	wreg,f,c
   992  007C6E  D7FE               	goto	u257
   993  007C70  2E01               	decfsz	??_move_motor& (0+255),f,c
   994  007C72  D7FC               	goto	u257
   995                           
   996                           ;operations.c: 70: _delay((unsigned long)((10)*(48000000/4000.0)));
   997  007C74  0E9C               	movlw	156
   998  007C76  6E01               	movwf	??_move_motor& (0+255),c
   999  007C78  0ED7               	movlw	215
  1000  007C7A                     u267:
  1001  007C7A  2EE8               	decfsz	wreg,f,c
  1002  007C7C  D7FE               	goto	u267
  1003  007C7E  2E01               	decfsz	??_move_motor& (0+255),f,c
  1004  007C80  D7FC               	goto	u267
  1005                           
  1006                           ;operations.c: 72: LATAbits.LATA0 = 0;
  1007  007C82  9089               	bcf	3977,0,c	;volatile
  1008                           
  1009                           ;operations.c: 73: _delay((unsigned long)((10)*(48000000/4000.0)));
  1010  007C84  0E9C               	movlw	156
  1011  007C86  6E01               	movwf	??_move_motor& (0+255),c
  1012  007C88  0ED7               	movlw	215
  1013  007C8A                     u277:
  1014  007C8A  2EE8               	decfsz	wreg,f,c
  1015  007C8C  D7FE               	goto	u277
  1016  007C8E  2E01               	decfsz	??_move_motor& (0+255),f,c
  1017  007C90  D7FC               	goto	u277
  1018                           
  1019                           ;operations.c: 74: _delay((unsigned long)((10)*(48000000/4000.0)));
  1020  007C92  0E9C               	movlw	156
  1021  007C94  6E01               	movwf	??_move_motor& (0+255),c
  1022  007C96  0ED7               	movlw	215
  1023  007C98                     u287:
  1024  007C98  2EE8               	decfsz	wreg,f,c
  1025  007C9A  D7FE               	goto	u287
  1026  007C9C  2E01               	decfsz	??_move_motor& (0+255),f,c
  1027  007C9E  D7FC               	goto	u287
  1028                           
  1029                           ;operations.c: 75: _delay((unsigned long)((10)*(48000000/4000.0)));
  1030  007CA0  0E9C               	movlw	156
  1031  007CA2  6E01               	movwf	??_move_motor& (0+255),c
  1032  007CA4  0ED7               	movlw	215
  1033  007CA6                     u297:
  1034  007CA6  2EE8               	decfsz	wreg,f,c
  1035  007CA8  D7FE               	goto	u297
  1036  007CAA  2E01               	decfsz	??_move_motor& (0+255),f,c
  1037  007CAC  D7FC               	goto	u297
  1038                           
  1039                           ;operations.c: 76: _delay((unsigned long)((10)*(48000000/4000.0)));
  1040  007CAE  0E9C               	movlw	156
  1041  007CB0  6E01               	movwf	??_move_motor& (0+255),c
  1042  007CB2  0ED7               	movlw	215
  1043  007CB4                     u307:
  1044  007CB4  2EE8               	decfsz	wreg,f,c
  1045  007CB6  D7FE               	goto	u307
  1046  007CB8  2E01               	decfsz	??_move_motor& (0+255),f,c
  1047  007CBA  D7FC               	goto	u307
  1048                           
  1049                           ;operations.c: 77: _delay((unsigned long)((10)*(48000000/4000.0)));
  1050  007CBC  0E9C               	movlw	156
  1051  007CBE  6E01               	movwf	??_move_motor& (0+255),c
  1052  007CC0  0ED7               	movlw	215
  1053  007CC2                     u317:
  1054  007CC2  2EE8               	decfsz	wreg,f,c
  1055  007CC4  D7FE               	goto	u317
  1056  007CC6  2E01               	decfsz	??_move_motor& (0+255),f,c
  1057  007CC8  D7FC               	goto	u317
  1058  007CCA  0012               	return	
  1059  007CCC                     __end_of_move_motor:
  1060                           	opt stack 0
  1061                           tblptru	equ	0xFF8
  1062                           tblptrh	equ	0xFF7
  1063                           tblptrl	equ	0xFF6
  1064                           tablat	equ	0xFF5
  1065                           wreg	equ	0xFE8
  1066                           indf2	equ	0xFDF
  1067                           fsr2h	equ	0xFDA
  1068                           fsr2l	equ	0xFD9
  1069                           status	equ	0xFD8
  1070                           
  1071 ;; *************** function _laser_read *****************
  1072 ;; Defined at:
  1073 ;;		line 95 in file "operations.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;		None
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;  temp            4   17[COMRAM] unsigned long 
  1078 ;;  read            2   21[COMRAM] unsigned char [2]
  1079 ;; Return value:  Size  Location     Type
  1080 ;;                  4    7[COMRAM] unsigned long 
  1081 ;; Registers used:
  1082 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1083 ;; Tracked objects:
  1084 ;;		On entry : 0/0
  1085 ;;		On exit  : 0/0
  1086 ;;		Unchanged: 0/0
  1087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1088 ;;      Params:         4       0       0       0       0       0       0
  1089 ;;      Locals:         6       0       0       0       0       0       0
  1090 ;;      Temps:          6       0       0       0       0       0       0
  1091 ;;      Totals:        16       0       0       0       0       0       0
  1092 ;;Total ram usage:       16 bytes
  1093 ;; Hardware stack levels used:    1
  1094 ;; Hardware stack levels required when called:    1
  1095 ;; This function calls:
  1096 ;;		_UART2_Write
  1097 ;;		_UART2_Read
  1098 ;; This function is called by:
  1099 ;;		_main
  1100 ;; This function uses a non-reentrant model
  1101 ;;
  1102                           
  1103                           	psect	text6
  1104  007D52                     __ptext6:
  1105                           	opt stack 0
  1106  007D52                     _laser_read:
  1107                           	opt stack 29
  1108                           
  1109                           ;operations.c: 96: char read[] = "B";
  1110                           
  1111                           ;incstack = 0
  1112                           ;incstack = 0
  1113  007D52  C036  F016         	movff	laser_read@F8891,laser_read@read
  1114  007D56  C037  F017         	movff	laser_read@F8891+1,laser_read@read+1
  1115                           
  1116                           ;operations.c: 97: UART2_Write(&read, 1);
  1117  007D5A  0E00               	movlw	high laser_read@read
  1118  007D5C  6E02               	movwf	?_UART2_Write+1,c
  1119  007D5E  0E16               	movlw	low laser_read@read
  1120  007D60  6E01               	movwf	?_UART2_Write,c
  1121  007D62  0E00               	movlw	0
  1122  007D64  6E04               	movwf	?_UART2_Write+3,c
  1123  007D66  0E01               	movlw	1
  1124  007D68  6E03               	movwf	?_UART2_Write+2,c
  1125  007D6A  EC3D  F03D         	call	_UART2_Write	;wreg free
  1126                           
  1127                           ;operations.c: 98: unsigned long temp = 0;
  1128  007D6E  0E00               	movlw	0
  1129  007D70  6E12               	movwf	laser_read@temp,c
  1130  007D72  0E00               	movlw	0
  1131  007D74  6E13               	movwf	laser_read@temp+1,c
  1132  007D76  0E00               	movlw	0
  1133  007D78  6E14               	movwf	laser_read@temp+2,c
  1134  007D7A  0E00               	movlw	0
  1135  007D7C  6E15               	movwf	laser_read@temp+3,c
  1136  007D7E                     l931:
  1137                           
  1138                           ;operations.c: 101: if(UART2_Read(&read) == 0)
  1139  007D7E  0E00               	movlw	high laser_read@read
  1140  007D80  6E02               	movwf	?_UART2_Read+1,c
  1141  007D82  0E16               	movlw	low laser_read@read
  1142  007D84  6E01               	movwf	?_UART2_Read,c
  1143  007D86  EC16  F03D         	call	_UART2_Read	;wreg free
  1144  007D8A  5002               	movf	?_UART2_Read+1,w,c
  1145  007D8C  1001               	iorwf	?_UART2_Read,w,c
  1146  007D8E  A4D8               	btfss	status,2,c
  1147  007D90  D7F6               	goto	l931
  1148                           
  1149                           ;operations.c: 102: {
  1150                           ;operations.c: 103: temp |= (read[0] << 24);
  1151  007D92  5016               	movf	laser_read@read,w,c
  1152  007D94  1212               	iorwf	laser_read@temp,f,c
  1153  007D96                     l935:
  1154                           
  1155                           ;operations.c: 108: if(UART2_Read(&read) == 0)
  1156  007D96  0E00               	movlw	high laser_read@read
  1157  007D98  6E02               	movwf	?_UART2_Read+1,c
  1158  007D9A  0E16               	movlw	low laser_read@read
  1159  007D9C  6E01               	movwf	?_UART2_Read,c
  1160  007D9E  EC16  F03D         	call	_UART2_Read	;wreg free
  1161  007DA2  5002               	movf	?_UART2_Read+1,w,c
  1162  007DA4  1001               	iorwf	?_UART2_Read,w,c
  1163  007DA6  A4D8               	btfss	status,2,c
  1164  007DA8  D7F6               	goto	l935
  1165                           
  1166                           ;operations.c: 109: {
  1167                           ;operations.c: 110: temp |= (read[0] << 16);
  1168  007DAA  5016               	movf	laser_read@read,w,c
  1169  007DAC  1212               	iorwf	laser_read@temp,f,c
  1170  007DAE                     l939:
  1171                           
  1172                           ;operations.c: 115: if(UART2_Read(&read) == 0)
  1173  007DAE  0E00               	movlw	high laser_read@read
  1174  007DB0  6E02               	movwf	?_UART2_Read+1,c
  1175  007DB2  0E16               	movlw	low laser_read@read
  1176  007DB4  6E01               	movwf	?_UART2_Read,c
  1177  007DB6  EC16  F03D         	call	_UART2_Read	;wreg free
  1178  007DBA  5002               	movf	?_UART2_Read+1,w,c
  1179  007DBC  1001               	iorwf	?_UART2_Read,w,c
  1180  007DBE  A4D8               	btfss	status,2,c
  1181  007DC0  D7F6               	goto	l939
  1182                           
  1183                           ;operations.c: 116: {
  1184                           ;operations.c: 117: temp |= (read[0] << 8);
  1185  007DC2  5016               	movf	laser_read@read,w,c
  1186  007DC4  6E0D               	movwf	(??_laser_read+1)& (0+255),c
  1187  007DC6  6A0C               	clrf	??_laser_read& (0+255),c
  1188  007DC8  C00C  F00E         	movff	??_laser_read,??_laser_read+2
  1189  007DCC  C00D  F00F         	movff	??_laser_read+1,??_laser_read+3
  1190  007DD0  0E00               	movlw	0
  1191  007DD2  BE0F               	btfsc	(??_laser_read+3)& (0+255),7,c
  1192  007DD4  0EFF               	movlw	255
  1193  007DD6  6E10               	movwf	(??_laser_read+4)& (0+255),c
  1194  007DD8  6E11               	movwf	(??_laser_read+5)& (0+255),c
  1195  007DDA  500E               	movf	??_laser_read+2,w,c
  1196  007DDC  1212               	iorwf	laser_read@temp,f,c
  1197  007DDE  500F               	movf	??_laser_read+3,w,c
  1198  007DE0  1213               	iorwf	laser_read@temp+1,f,c
  1199  007DE2  5010               	movf	??_laser_read+4,w,c
  1200  007DE4  1214               	iorwf	laser_read@temp+2,f,c
  1201  007DE6  5011               	movf	??_laser_read+5,w,c
  1202  007DE8  1215               	iorwf	laser_read@temp+3,f,c
  1203  007DEA                     l943:
  1204                           
  1205                           ;operations.c: 122: if(UART2_Read(&read) == 0)
  1206  007DEA  0E00               	movlw	high laser_read@read
  1207  007DEC  6E02               	movwf	?_UART2_Read+1,c
  1208  007DEE  0E16               	movlw	low laser_read@read
  1209  007DF0  6E01               	movwf	?_UART2_Read,c
  1210  007DF2  EC16  F03D         	call	_UART2_Read	;wreg free
  1211  007DF6  5002               	movf	?_UART2_Read+1,w,c
  1212  007DF8  1001               	iorwf	?_UART2_Read,w,c
  1213  007DFA  A4D8               	btfss	status,2,c
  1214  007DFC  D7F6               	goto	l943
  1215                           
  1216                           ;operations.c: 123: {
  1217                           ;operations.c: 124: temp |= (read[0]);
  1218  007DFE  5016               	movf	laser_read@read,w,c
  1219  007E00  1212               	iorwf	laser_read@temp,f,c
  1220  007E02                     l947:
  1221                           
  1222                           ;operations.c: 129: if(UART2_Read(&read) == 0)
  1223  007E02  0E00               	movlw	high laser_read@read
  1224  007E04  6E02               	movwf	?_UART2_Read+1,c
  1225  007E06  0E16               	movlw	low laser_read@read
  1226  007E08  6E01               	movwf	?_UART2_Read,c
  1227  007E0A  EC16  F03D         	call	_UART2_Read	;wreg free
  1228  007E0E  5002               	movf	?_UART2_Read+1,w,c
  1229  007E10  1001               	iorwf	?_UART2_Read,w,c
  1230  007E12  A4D8               	btfss	status,2,c
  1231  007E14  D7F6               	goto	l947
  1232  007E16                     l951:
  1233                           
  1234                           ;operations.c: 133: if(UART2_Read(&read) == 0)
  1235  007E16  0E00               	movlw	high laser_read@read
  1236  007E18  6E02               	movwf	?_UART2_Read+1,c
  1237  007E1A  0E16               	movlw	low laser_read@read
  1238  007E1C  6E01               	movwf	?_UART2_Read,c
  1239  007E1E  EC16  F03D         	call	_UART2_Read	;wreg free
  1240  007E22  5002               	movf	?_UART2_Read+1,w,c
  1241  007E24  1001               	iorwf	?_UART2_Read,w,c
  1242  007E26  A4D8               	btfss	status,2,c
  1243  007E28  D7F6               	goto	l951
  1244                           
  1245                           ;operations.c: 135: }
  1246                           ;operations.c: 136: return temp;
  1247                           
  1248                           ;operations.c: 134: break;
  1249  007E2A  C012  F008         	movff	laser_read@temp,?_laser_read
  1250  007E2E  C013  F009         	movff	laser_read@temp+1,?_laser_read+1
  1251  007E32  C014  F00A         	movff	laser_read@temp+2,?_laser_read+2
  1252  007E36  C015  F00B         	movff	laser_read@temp+3,?_laser_read+3
  1253  007E3A  0012               	return	
  1254  007E3C                     __end_of_laser_read:
  1255                           	opt stack 0
  1256                           tblptru	equ	0xFF8
  1257                           tblptrh	equ	0xFF7
  1258                           tblptrl	equ	0xFF6
  1259                           tablat	equ	0xFF5
  1260                           wreg	equ	0xFE8
  1261                           indf2	equ	0xFDF
  1262                           fsr2h	equ	0xFDA
  1263                           fsr2l	equ	0xFD9
  1264                           status	equ	0xFD8
  1265                           
  1266 ;; *************** function _laser_init *****************
  1267 ;; Defined at:
  1268 ;;		line 81 in file "operations.c"
  1269 ;; Parameters:    Size  Location     Type
  1270 ;;		None
  1271 ;; Auto vars:     Size  Location     Type
  1272 ;;  resp            1    9[COMRAM] unsigned char 
  1273 ;;  init            1    8[COMRAM] unsigned char 
  1274 ;; Return value:  Size  Location     Type
  1275 ;;		None               void
  1276 ;; Registers used:
  1277 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1278 ;; Tracked objects:
  1279 ;;		On entry : 0/0
  1280 ;;		On exit  : 0/0
  1281 ;;		Unchanged: 0/0
  1282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1283 ;;      Params:         0       0       0       0       0       0       0
  1284 ;;      Locals:         2       0       0       0       0       0       0
  1285 ;;      Temps:          1       0       0       0       0       0       0
  1286 ;;      Totals:         3       0       0       0       0       0       0
  1287 ;;Total ram usage:        3 bytes
  1288 ;; Hardware stack levels used:    1
  1289 ;; Hardware stack levels required when called:    1
  1290 ;; This function calls:
  1291 ;;		_UART2_Write
  1292 ;;		_UART2_Read
  1293 ;; This function is called by:
  1294 ;;		_main
  1295 ;; This function uses a non-reentrant model
  1296 ;;
  1297                           
  1298                           	psect	text7
  1299  007AB4                     __ptext7:
  1300                           	opt stack 0
  1301  007AB4                     _laser_init:
  1302                           	opt stack 29
  1303                           
  1304                           ;operations.c: 82: char init = 'U';
  1305                           
  1306                           ;incstack = 0
  1307                           ;incstack = 0
  1308  007AB4  6E08               	movwf	??_laser_init& (0+255),c
  1309  007AB6  0E55               	movlw	85
  1310  007AB8  6E09               	movwf	laser_init@init,c
  1311  007ABA  5008               	movf	??_laser_init& (0+255),w,c
  1312                           
  1313                           ;operations.c: 83: char resp;
  1314                           ;operations.c: 84: UART2_Write(&init, 1);
  1315  007ABC  0E00               	movlw	high laser_init@init
  1316  007ABE  6E02               	movwf	?_UART2_Write+1,c
  1317  007AC0  0E09               	movlw	low laser_init@init
  1318  007AC2  6E01               	movwf	?_UART2_Write,c
  1319  007AC4  0E00               	movlw	0
  1320  007AC6  6E04               	movwf	?_UART2_Write+3,c
  1321  007AC8  0E01               	movlw	1
  1322  007ACA  6E03               	movwf	?_UART2_Write+2,c
  1323  007ACC  EC3D  F03D         	call	_UART2_Write	;wreg free
  1324  007AD0                     l919:
  1325                           
  1326                           ;operations.c: 86: if (UART2_Read(&resp) == 0) {
  1327  007AD0  0E00               	movlw	high laser_init@resp
  1328  007AD2  6E02               	movwf	?_UART2_Read+1,c
  1329  007AD4  0E0A               	movlw	low laser_init@resp
  1330  007AD6  6E01               	movwf	?_UART2_Read,c
  1331  007AD8  EC16  F03D         	call	_UART2_Read	;wreg free
  1332  007ADC  5002               	movf	?_UART2_Read+1,w,c
  1333  007ADE  1001               	iorwf	?_UART2_Read,w,c
  1334  007AE0  A4D8               	btfss	status,2,c
  1335  007AE2  D7F6               	goto	l919
  1336                           
  1337                           ;operations.c: 87: if (resp == ':') {
  1338  007AE4  500A               	movf	laser_init@resp,w,c
  1339  007AE6  0A3A               	xorlw	58
  1340  007AE8  B4D8               	btfsc	status,2,c
  1341                           
  1342                           ;operations.c: 88: break;
  1343  007AEA  0012               	return	
  1344  007AEC  D7F1               	goto	l919
  1345  007AEE                     __end_of_laser_init:
  1346                           	opt stack 0
  1347                           tblptru	equ	0xFF8
  1348                           tblptrh	equ	0xFF7
  1349                           tblptrl	equ	0xFF6
  1350                           tablat	equ	0xFF5
  1351                           wreg	equ	0xFE8
  1352                           indf2	equ	0xFDF
  1353                           fsr2h	equ	0xFDA
  1354                           fsr2l	equ	0xFD9
  1355                           status	equ	0xFD8
  1356                           
  1357 ;; *************** function _UART2_Read *****************
  1358 ;; Defined at:
  1359 ;;		line 87 in file "my_UART.c"
  1360 ;; Parameters:    Size  Location     Type
  1361 ;;  c               2    0[COMRAM] PTR unsigned char 
  1362 ;;		 -> laser_read@read(2), laser_init@resp(1), 
  1363 ;; Auto vars:     Size  Location     Type
  1364 ;;		None
  1365 ;; Return value:  Size  Location     Type
  1366 ;;                  2    0[COMRAM] int 
  1367 ;; Registers used:
  1368 ;;		wreg, fsr2l, fsr2h, status,2
  1369 ;; Tracked objects:
  1370 ;;		On entry : 0/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1374 ;;      Params:         2       0       0       0       0       0       0
  1375 ;;      Locals:         0       0       0       0       0       0       0
  1376 ;;      Temps:          0       0       0       0       0       0       0
  1377 ;;      Totals:         2       0       0       0       0       0       0
  1378 ;;Total ram usage:        2 bytes
  1379 ;; Hardware stack levels used:    1
  1380 ;; This function calls:
  1381 ;;		Nothing
  1382 ;; This function is called by:
  1383 ;;		_laser_init
  1384 ;;		_laser_read
  1385 ;; This function uses a non-reentrant model
  1386 ;;
  1387                           
  1388                           	psect	text8
  1389  007A2C                     __ptext8:
  1390                           	opt stack 0
  1391  007A2C                     _UART2_Read:
  1392                           	opt stack 29
  1393                           
  1394                           ;my_UART.c: 88: if (PIR3bits.RC2IF) {
  1395                           
  1396                           ;incstack = 0
  1397                           ;incstack = 0
  1398  007A2C  AAA4               	btfss	4004,5,c	;volatile
  1399  007A2E  D00B               	goto	l101
  1400                           
  1401                           ;my_UART.c: 89: *c = RCREG2;
  1402  007A30  C001  FFD9         	movff	UART2_Read@c,fsr2l
  1403  007A34  C002  FFDA         	movff	UART2_Read@c+1,fsr2h
  1404  007A38  CF74 FFDF          	movff	3956,indf2	;volatile
  1405                           
  1406                           ;my_UART.c: 90: return 0;
  1407  007A3C  0E00               	movlw	0
  1408  007A3E  6E02               	movwf	?_UART2_Read+1,c
  1409  007A40  0E00               	movlw	0
  1410  007A42  6E01               	movwf	?_UART2_Read,c
  1411  007A44  0012               	return	
  1412  007A46                     l101:
  1413                           
  1414                           ;my_UART.c: 92: else
  1415                           ;my_UART.c: 93: return -1;
  1416  007A46  6801               	setf	?_UART2_Read,c
  1417  007A48  6802               	setf	?_UART2_Read+1,c
  1418  007A4A  0012               	return	
  1419  007A4C                     __end_of_UART2_Read:
  1420                           	opt stack 0
  1421                           tblptru	equ	0xFF8
  1422                           tblptrh	equ	0xFF7
  1423                           tblptrl	equ	0xFF6
  1424                           tablat	equ	0xFF5
  1425                           wreg	equ	0xFE8
  1426                           indf2	equ	0xFDF
  1427                           fsr2h	equ	0xFDA
  1428                           fsr2l	equ	0xFD9
  1429                           status	equ	0xFD8
  1430                           
  1431 ;; *************** function _UART2_Write *****************
  1432 ;; Defined at:
  1433 ;;		line 69 in file "my_UART.c"
  1434 ;; Parameters:    Size  Location     Type
  1435 ;;  c               2    0[COMRAM] PTR unsigned char 
  1436 ;;		 -> laser_read@read(2), laser_init@init(1), 
  1437 ;;  length          2    2[COMRAM] int 
  1438 ;; Auto vars:     Size  Location     Type
  1439 ;;  i               2    5[COMRAM] int 
  1440 ;; Return value:  Size  Location     Type
  1441 ;;		None               void
  1442 ;; Registers used:
  1443 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1444 ;; Tracked objects:
  1445 ;;		On entry : 0/0
  1446 ;;		On exit  : 0/0
  1447 ;;		Unchanged: 0/0
  1448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1449 ;;      Params:         4       0       0       0       0       0       0
  1450 ;;      Locals:         2       0       0       0       0       0       0
  1451 ;;      Temps:          1       0       0       0       0       0       0
  1452 ;;      Totals:         7       0       0       0       0       0       0
  1453 ;;Total ram usage:        7 bytes
  1454 ;; Hardware stack levels used:    1
  1455 ;; This function calls:
  1456 ;;		Nothing
  1457 ;; This function is called by:
  1458 ;;		_laser_init
  1459 ;;		_laser_read
  1460 ;; This function uses a non-reentrant model
  1461 ;;
  1462                           
  1463                           	psect	text9
  1464  007A7A                     __ptext9:
  1465                           	opt stack 0
  1466  007A7A                     _UART2_Write:
  1467                           	opt stack 29
  1468                           
  1469                           ;my_UART.c: 70: for (int i=0; i<length; i++){
  1470                           
  1471                           ;incstack = 0
  1472                           ;incstack = 0
  1473  007A7A  0E00               	movlw	0
  1474  007A7C  6E07               	movwf	UART2_Write@i+1,c
  1475  007A7E  0E00               	movlw	0
  1476  007A80  6E06               	movwf	UART2_Write@i,c
  1477  007A82  D00D               	goto	l861
  1478  007A84                     l857:
  1479                           
  1480                           ;my_UART.c: 71: TXREG2 = c[i];
  1481  007A84  5006               	movf	UART2_Write@i,w,c
  1482  007A86  2401               	addwf	UART2_Write@c,w,c
  1483  007A88  6ED9               	movwf	fsr2l,c
  1484  007A8A  5007               	movf	UART2_Write@i+1,w,c
  1485  007A8C  2002               	addwfc	UART2_Write@c+1,w,c
  1486  007A8E  6EDA               	movwf	fsr2h,c
  1487  007A90  50DF               	movf	indf2,w,c
  1488  007A92  6E73               	movwf	3955,c	;volatile
  1489  007A94  F000               	nop		;# 
  1490  007A96                     l89:
  1491  007A96  A8A4               	btfss	4004,4,c	;volatile
  1492  007A98  D7FE               	goto	l89
  1493  007A9A  4A06               	infsnz	UART2_Write@i,f,c
  1494  007A9C  2A07               	incf	UART2_Write@i+1,f,c
  1495  007A9E                     l861:
  1496  007A9E  5007               	movf	UART2_Write@i+1,w,c
  1497  007AA0  0A80               	xorlw	128
  1498  007AA2  6E05               	movwf	??_UART2_Write& (0+255),c
  1499  007AA4  5003               	movf	UART2_Write@length,w,c
  1500  007AA6  5C06               	subwf	UART2_Write@i,w,c
  1501  007AA8  5004               	movf	UART2_Write@length+1,w,c
  1502  007AAA  0A80               	xorlw	128
  1503  007AAC  5805               	subwfb	??_UART2_Write& (0+255),w,c
  1504  007AAE  B0D8               	btfsc	status,0,c
  1505  007AB0  0012               	return	
  1506  007AB2  D7E8               	goto	l857
  1507  007AB4                     __end_of_UART2_Write:
  1508                           	opt stack 0
  1509                           tblptru	equ	0xFF8
  1510                           tblptrh	equ	0xFF7
  1511                           tblptrl	equ	0xFF6
  1512                           tablat	equ	0xFF5
  1513                           wreg	equ	0xFE8
  1514                           indf2	equ	0xFDF
  1515                           fsr2h	equ	0xFDA
  1516                           fsr2l	equ	0xFD9
  1517                           status	equ	0xFD8
  1518                           
  1519 ;; *************** function _UART2_Init *****************
  1520 ;; Defined at:
  1521 ;;		line 36 in file "my_UART.c"
  1522 ;; Parameters:    Size  Location     Type
  1523 ;;  data            2    0[COMRAM] PTR struct .
  1524 ;;		 -> main@uart_data(256), 
  1525 ;; Auto vars:     Size  Location     Type
  1526 ;;		None
  1527 ;; Return value:  Size  Location     Type
  1528 ;;		None               void
  1529 ;; Registers used:
  1530 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1531 ;; Tracked objects:
  1532 ;;		On entry : 0/0
  1533 ;;		On exit  : 0/0
  1534 ;;		Unchanged: 0/0
  1535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1536 ;;      Params:         2       0       0       0       0       0       0
  1537 ;;      Locals:         0       0       0       0       0       0       0
  1538 ;;      Temps:          0       0       0       0       0       0       0
  1539 ;;      Totals:         2       0       0       0       0       0       0
  1540 ;;Total ram usage:        2 bytes
  1541 ;; Hardware stack levels used:    1
  1542 ;; This function calls:
  1543 ;;		Nothing
  1544 ;; This function is called by:
  1545 ;;		_main
  1546 ;; This function uses a non-reentrant model
  1547 ;;
  1548                           
  1549                           	psect	text10
  1550  007BE6                     __ptext10:
  1551                           	opt stack 0
  1552  007BE6                     _UART2_Init:
  1553                           	opt stack 30
  1554                           
  1555                           ;my_UART.c: 37: uart_2_data_p = data;
  1556                           
  1557                           ;incstack = 0
  1558                           ;incstack = 0
  1559  007BE6  C001  F034         	movff	UART2_Init@data,_uart_2_data_p
  1560  007BEA  C002  F035         	movff	UART2_Init@data+1,_uart_2_data_p+1
  1561                           
  1562                           ;my_UART.c: 39: TRISDbits.TRISD7=1;
  1563  007BEE  8E95               	bsf	3989,7,c	;volatile
  1564                           
  1565                           ;my_UART.c: 40: TRISDbits.TRISD6=0;
  1566  007BF0  9C95               	bcf	3989,6,c	;volatile
  1567                           
  1568                           ;my_UART.c: 42: BAUDCON2bits.BRG16 = 0;
  1569  007BF2  9670               	bcf	3952,3,c	;volatile
  1570                           
  1571                           ;my_UART.c: 43: SPBRG2 = 77;
  1572  007BF4  0E4D               	movlw	77
  1573  007BF6  6E75               	movwf	3957,c	;volatile
  1574                           
  1575                           ;my_UART.c: 44: TXSTA2bits.BRGH = 1;
  1576  007BF8  8472               	bsf	3954,2,c	;volatile
  1577                           
  1578                           ;my_UART.c: 45: TXSTA2bits.SYNC = 0;
  1579  007BFA  9872               	bcf	3954,4,c	;volatile
  1580                           
  1581                           ;my_UART.c: 46: RCSTA2bits.SPEN = 1;
  1582  007BFC  8E71               	bsf	3953,7,c	;volatile
  1583                           
  1584                           ;my_UART.c: 47: TXSTA2bits.TX9 = 0;
  1585  007BFE  9C72               	bcf	3954,6,c	;volatile
  1586                           
  1587                           ;my_UART.c: 48: RCSTA2bits.RX9 = 0;
  1588  007C00  9C71               	bcf	3953,6,c	;volatile
  1589                           
  1590                           ;my_UART.c: 49: RCSTA2bits.CREN = 1;
  1591  007C02  8871               	bsf	3953,4,c	;volatile
  1592                           
  1593                           ;my_UART.c: 51: TXSTA2bits.TXEN = 1;
  1594  007C04  8A72               	bsf	3954,5,c	;volatile
  1595                           
  1596                           ;my_UART.c: 55: uart_2_data_p->buffer_in_read_ind = 0;
  1597  007C06  EE20 F07D          	lfsr	2,125
  1598  007C0A  5034               	movf	_uart_2_data_p,w,c
  1599  007C0C  26D9               	addwf	fsr2l,f,c
  1600  007C0E  5035               	movf	_uart_2_data_p+1,w,c
  1601  007C10  22DA               	addwfc	fsr2h,f,c
  1602  007C12  0E00               	movlw	0
  1603  007C14  6EDF               	movwf	indf2,c
  1604                           
  1605                           ;my_UART.c: 56: uart_2_data_p->buffer_in_write_ind = 0;
  1606  007C16  EE20 F07E          	lfsr	2,126
  1607  007C1A  5034               	movf	_uart_2_data_p,w,c
  1608  007C1C  26D9               	addwf	fsr2l,f,c
  1609  007C1E  5035               	movf	_uart_2_data_p+1,w,c
  1610  007C20  22DA               	addwfc	fsr2h,f,c
  1611  007C22  0E00               	movlw	0
  1612  007C24  6EDF               	movwf	indf2,c
  1613                           
  1614                           ;my_UART.c: 57: uart_2_data_p->buffer_in_len = 0;
  1615  007C26  EE20 F07F          	lfsr	2,127
  1616  007C2A  5034               	movf	_uart_2_data_p,w,c
  1617  007C2C  26D9               	addwf	fsr2l,f,c
  1618  007C2E  5035               	movf	_uart_2_data_p+1,w,c
  1619  007C30  22DA               	addwfc	fsr2h,f,c
  1620  007C32  0E00               	movlw	0
  1621  007C34  6EDF               	movwf	indf2,c
  1622                           
  1623                           ;my_UART.c: 58: uart_2_data_p->buffer_in_len_tmp = 0;
  1624  007C36  EE20 F080          	lfsr	2,128
  1625  007C3A  5034               	movf	_uart_2_data_p,w,c
  1626  007C3C  26D9               	addwf	fsr2l,f,c
  1627  007C3E  5035               	movf	_uart_2_data_p+1,w,c
  1628  007C40  22DA               	addwfc	fsr2h,f,c
  1629  007C42  0E00               	movlw	0
  1630  007C44  6EDF               	movwf	indf2,c
  1631  007C46  0012               	return	
  1632  007C48                     __end_of_UART2_Init:
  1633                           	opt stack 0
  1634                           tblptru	equ	0xFF8
  1635                           tblptrh	equ	0xFF7
  1636                           tblptrl	equ	0xFF6
  1637                           tablat	equ	0xFF5
  1638                           wreg	equ	0xFE8
  1639                           indf2	equ	0xFDF
  1640                           fsr2h	equ	0xFDA
  1641                           fsr2l	equ	0xFD9
  1642                           status	equ	0xFD8
  1643                           
  1644 ;; *************** function _UART1_Init *****************
  1645 ;; Defined at:
  1646 ;;		line 9 in file "my_UART.c"
  1647 ;; Parameters:    Size  Location     Type
  1648 ;;  data            2    0[COMRAM] PTR struct .
  1649 ;;		 -> main@uart_data(256), 
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;		None
  1652 ;; Return value:  Size  Location     Type
  1653 ;;		None               void
  1654 ;; Registers used:
  1655 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1656 ;; Tracked objects:
  1657 ;;		On entry : 0/0
  1658 ;;		On exit  : 0/0
  1659 ;;		Unchanged: 0/0
  1660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1661 ;;      Params:         2       0       0       0       0       0       0
  1662 ;;      Locals:         0       0       0       0       0       0       0
  1663 ;;      Temps:          0       0       0       0       0       0       0
  1664 ;;      Totals:         2       0       0       0       0       0       0
  1665 ;;Total ram usage:        2 bytes
  1666 ;; Hardware stack levels used:    1
  1667 ;; This function calls:
  1668 ;;		Nothing
  1669 ;; This function is called by:
  1670 ;;		_main
  1671 ;; This function uses a non-reentrant model
  1672 ;;
  1673                           
  1674                           	psect	text11
  1675  007B84                     __ptext11:
  1676                           	opt stack 0
  1677  007B84                     _UART1_Init:
  1678                           	opt stack 30
  1679                           
  1680                           ;my_UART.c: 10: uart_1_data_p = data;
  1681                           
  1682                           ;incstack = 0
  1683                           ;incstack = 0
  1684  007B84  C001  F032         	movff	UART1_Init@data,_uart_1_data_p
  1685  007B88  C002  F033         	movff	UART1_Init@data+1,_uart_1_data_p+1
  1686                           
  1687                           ;my_UART.c: 12: TRISCbits.TRISC6 = 0;
  1688  007B8C  9C94               	bcf	3988,6,c	;volatile
  1689                           
  1690                           ;my_UART.c: 13: TRISCbits.TRISC7 = 1;
  1691  007B8E  8E94               	bsf	3988,7,c	;volatile
  1692                           
  1693                           ;my_UART.c: 15: BAUDCON1bits.BRG16 = 0;
  1694  007B90  96B8               	bcf	4024,3,c	;volatile
  1695                           
  1696                           ;my_UART.c: 16: SPBRG1 = 77;
  1697  007B92  0E4D               	movlw	77
  1698  007B94  6EAF               	movwf	4015,c	;volatile
  1699                           
  1700                           ;my_UART.c: 17: TXSTA1bits.BRGH = 1;
  1701  007B96  84AC               	bsf	4012,2,c	;volatile
  1702                           
  1703                           ;my_UART.c: 18: TXSTA1bits.SYNC = 0;
  1704  007B98  98AC               	bcf	4012,4,c	;volatile
  1705                           
  1706                           ;my_UART.c: 19: RCSTA1bits.SPEN = 1;
  1707  007B9A  8EAB               	bsf	4011,7,c	;volatile
  1708                           
  1709                           ;my_UART.c: 20: TXSTA1bits.TX9 = 0;
  1710  007B9C  9CAC               	bcf	4012,6,c	;volatile
  1711                           
  1712                           ;my_UART.c: 21: RCSTA1bits.RX9 = 0;
  1713  007B9E  9CAB               	bcf	4011,6,c	;volatile
  1714                           
  1715                           ;my_UART.c: 22: RCSTA1bits.CREN = 1;
  1716  007BA0  88AB               	bsf	4011,4,c	;volatile
  1717                           
  1718                           ;my_UART.c: 24: TXSTA1bits.TXEN = 1;
  1719  007BA2  8AAC               	bsf	4012,5,c	;volatile
  1720                           
  1721                           ;my_UART.c: 28: uart_1_data_p->buffer_in_read_ind = 0;
  1722  007BA4  EE20 F07D          	lfsr	2,125
  1723  007BA8  5032               	movf	_uart_1_data_p,w,c
  1724  007BAA  26D9               	addwf	fsr2l,f,c
  1725  007BAC  5033               	movf	_uart_1_data_p+1,w,c
  1726  007BAE  22DA               	addwfc	fsr2h,f,c
  1727  007BB0  0E00               	movlw	0
  1728  007BB2  6EDF               	movwf	indf2,c
  1729                           
  1730                           ;my_UART.c: 29: uart_1_data_p->buffer_in_write_ind = 0;
  1731  007BB4  EE20 F07E          	lfsr	2,126
  1732  007BB8  5032               	movf	_uart_1_data_p,w,c
  1733  007BBA  26D9               	addwf	fsr2l,f,c
  1734  007BBC  5033               	movf	_uart_1_data_p+1,w,c
  1735  007BBE  22DA               	addwfc	fsr2h,f,c
  1736  007BC0  0E00               	movlw	0
  1737  007BC2  6EDF               	movwf	indf2,c
  1738                           
  1739                           ;my_UART.c: 30: uart_1_data_p->buffer_in_len = 0;
  1740  007BC4  EE20 F07F          	lfsr	2,127
  1741  007BC8  5032               	movf	_uart_1_data_p,w,c
  1742  007BCA  26D9               	addwf	fsr2l,f,c
  1743  007BCC  5033               	movf	_uart_1_data_p+1,w,c
  1744  007BCE  22DA               	addwfc	fsr2h,f,c
  1745  007BD0  0E00               	movlw	0
  1746  007BD2  6EDF               	movwf	indf2,c
  1747                           
  1748                           ;my_UART.c: 31: uart_1_data_p->buffer_in_len_tmp = 0;
  1749  007BD4  EE20 F080          	lfsr	2,128
  1750  007BD8  5032               	movf	_uart_1_data_p,w,c
  1751  007BDA  26D9               	addwf	fsr2l,f,c
  1752  007BDC  5033               	movf	_uart_1_data_p+1,w,c
  1753  007BDE  22DA               	addwfc	fsr2h,f,c
  1754  007BE0  0E00               	movlw	0
  1755  007BE2  6EDF               	movwf	indf2,c
  1756  007BE4  0012               	return	
  1757  007BE6                     __end_of_UART1_Init:
  1758                           	opt stack 0
  1759  0000                     tblptru	equ	0xFF8
  1760                           tblptrh	equ	0xFF7
  1761                           tblptrl	equ	0xFF6
  1762                           tablat	equ	0xFF5
  1763                           wreg	equ	0xFE8
  1764                           indf2	equ	0xFDF
  1765                           fsr2h	equ	0xFDA
  1766                           fsr2l	equ	0xFD9
  1767                           status	equ	0xFD8
  1768                           tblptru	equ	0xFF8
  1769                           tblptrh	equ	0xFF7
  1770                           tblptrl	equ	0xFF6
  1771                           tablat	equ	0xFF5
  1772                           wreg	equ	0xFE8
  1773                           indf2	equ	0xFDF
  1774                           fsr2h	equ	0xFDA
  1775                           fsr2l	equ	0xFD9
  1776                           status	equ	0xFD8
  1777                           
  1778                           	psect	rparam
  1779  0000                     tblptru	equ	0xFF8
  1780                           tblptrh	equ	0xFF7
  1781                           tblptrl	equ	0xFF6
  1782                           tablat	equ	0xFF5
  1783                           wreg	equ	0xFE8
  1784                           indf2	equ	0xFDF
  1785                           fsr2h	equ	0xFDA
  1786                           fsr2l	equ	0xFD9
  1787                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         0
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     49      55
    BANK0           160      0       0
    BANK1           256    256     256
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    ?_laser_read	unsigned long  size(2) Largest target is 0

    ?___lldiv	unsigned long  size(2) Largest target is 0

    ?___lmul	unsigned long  size(2) Largest target is 0

    UART2_Read@c	PTR unsigned char  size(2) Largest target is 2
		 -> laser_read@read(COMRAM[2]), laser_init@resp(COMRAM[1]), 

    UART2_Write@c	PTR unsigned char  size(2) Largest target is 2
		 -> laser_read@read(COMRAM[2]), laser_init@init(COMRAM[1]), 

    UART1_Write@c	PTR unsigned char  size(2) Largest target is 1535
		 -> RAM(DATA[1535]), wifi_write@write(COMRAM[4]), 

    UART2_Init@data	PTR struct . size(2) Largest target is 256
		 -> main@uart_data(BANK1[256]), 

    uart_2_data_p	PTR struct . size(2) Largest target is 256
		 -> NULL(NULL[0]), main@uart_data(BANK1[256]), 

    UART1_Init@data	PTR struct . size(2) Largest target is 256
		 -> main@uart_data(BANK1[256]), 

    uart_1_data_p	PTR struct . size(2) Largest target is 256
		 -> NULL(NULL[0]), main@uart_data(BANK1[256]), 


Critical Paths under _main in COMRAM

    _main->_laser_read
    _wifi_write->_UART1_Write
    _laser_read->_UART2_Write
    _laser_init->_UART2_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               282   282      0     990
                                             23 COMRAM    26    26      0
                                              0 BANK1    256   256      0
                         _UART1_Init
                         _UART2_Init
                         _laser_init
                         _laser_read
                         _move_motor
                         _wifi_write
                             ___lmul
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             14     6      8     105
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8      60
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _wifi_write                                          10     6      4     210
                                              6 COMRAM    10     6      4
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (2) _UART1_Write                                          6     2      4      75
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _move_motor                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _laser_read                                          16    12      4     255
                                              7 COMRAM    16    12      4
                        _UART2_Write
                         _UART2_Read
 ---------------------------------------------------------------------------------
 (1) _laser_init                                           3     3      0     120
                                              7 COMRAM     3     3      0
                        _UART2_Write
                         _UART2_Read
 ---------------------------------------------------------------------------------
 (2) _UART2_Read                                           2     0      2      15
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _UART2_Write                                          7     3      4      60
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _UART2_Init                                           2     0      2      15
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _UART1_Init                                           2     0      2      15
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART1_Init
   _UART2_Init
   _laser_init
     _UART2_Write
     _UART2_Read
   _laser_read
     _UART2_Write
     _UART2_Read
   _move_motor
   _wifi_write
     _UART1_Write
   ___lmul
   ___lldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100    100     100       6      100.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     31      37       1       57.9%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       2       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     137       9        0.0%
DATA                 0      0     139      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Fri Dec 13 15:27:59 2013

                     l31 7FFE                       l81 7A6E                       l89 7A96  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000              __CFG_LVP$ON 000000                      l101 7A46  
                    l901 7CFE                      l911 7D32                      l903 7D02  
                    l931 7D7E                      l596 7D40                      l861 7A9E  
                    l919 7AD0                      l951 7E16                      l943 7DEA  
                    l935 7D96                      l857 7A84                      l947 7E02  
                    l939 7DAE                      l885 7B3E                      l889 7B52  
                    l899 7CF2             __CFG_CPB$OFF 000000                      u307 7CB4  
                    u317 7CC2                      u237 7C50                      u247 7C5E  
                    u257 7C6C             __CFG_CPD$OFF 000000                      u267 7C7A  
                    u277 7C8A                      u287 7C98                      u297 7CA6  
                    wreg 000FE8               _TXSTA1bits 000FAC               _TXSTA2bits 000F72  
            main@arcarea 002E              main@avgdist 002A                     _main 7E3C  
                   fsr2h 000FDA                     indf2 000FDF                     fsr2l 000FD9  
          __CFG_BORV$190 000000                     start 0000            __CFG_IESO$OFF 000000  
            ?_UART1_Init 0001              ?_UART2_Init 0001              ?_UART2_Read 0001  
           _BAUDCON1bits 000FB8             _BAUDCON2bits 000F70                    ?_main 0001  
        __end_of___lldiv 7D52             main@lastdist 001C             main@currdist 0024  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
    ___lmul@multiplicand 0005            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000       __CFG_MCLRE$EXTMCLR 000000  
                  main@n 0028                    tablat 000FF5                    status 000FD8  
         __CFG_HFOFST$ON 000000           __CFG_FOSC$HSMP 000000          __initialization 7A0E  
           __end_of_main 8000             ?_UART1_Write 0001             ?_UART2_Write 0001  
                 ??_main 0018            __activetblptr 000000           __CFG_PLLCFG$ON 000000  
                 _ANSELA 000F38                   _ANSELB 000F39                   _ANSELC 000F3A  
                 _ANSELD 000F3B                   _ANSELE 000F3C      __size_of_UART1_Init 0062  
    __size_of_UART2_Init 0062      __size_of_UART2_Read 0020           __CFG_WDTEN$OFF 000000  
                 _RCREG1 000FAE                   _RCREG2 000F74                   _SPBRG1 000FAF  
                 _SPBRG2 000F75                   _TXREG1 000FAD                   _TXREG2 000F73  
         __CFG_XINST$OFF 000000                   ___lmul 7B2E           __CFG_STVREN$ON 000000  
              ??___lldiv 0009           laser_init@init 0009            main@uart_data 0100  
         laser_init@resp 000A           laser_read@read 0016           laser_read@temp 0012  
           __pdataCOMRAM 0036                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 7A26  
        __CFG_PBADEN$OFF 000000           __pcstackCOMRAM 0001               __pnvCOMRAM 0032  
            UART2_Read@c 0001       __CFG_CCP2MX$PORTC1 000000                  ?___lmul 0001  
           ??_UART1_Init 0003             ??_UART2_Init 0003             ??_UART2_Read 0003  
     __CFG_CCP3MX$PORTB5 000000           ___lmul@product 0009     __size_of_UART1_Write 002E  
   __size_of_UART2_Write 003A       __end_of_UART1_Init 7BE6       __end_of_UART2_Init 7C48  
     __end_of_UART2_Read 7A4C          __CFG_PWRTEN$OFF 000000                  __Hparam 0000  
             _laser_init 7AB4               _laser_read 7D52                  __Lparam 0000  
        __size_of___lmul 0056                  ___lldiv 7CCC                  __pcinit 7A0E  
                __ramtop 0600                  __ptext0 7E3C                  __ptext1 7CCC  
                __ptext2 7B2E                  __ptext3 7AEE                  __ptext4 7A4C  
                __ptext5 7C48                  __ptext6 7D52                  __ptext7 7AB4  
                __ptext8 7A2C                  __ptext9 7A7A          laser_read@F8891 0036  
   end_of_initialization 7A26          ___lldiv@divisor 0005          ___lldiv@counter 000E  
             _move_motor 7C48        UART1_Write@length 0003               _wifi_write 7AEE  
              _TRISAbits 000F92                _TRISCbits 000F94                _TRISDbits 000F95  
            ?_laser_init 0001              ?_laser_read 0008           __end_of___lmul 7B84  
          __pidataCOMRAM 7A0C      start_initialization 7A0E              ?_move_motor 0001  
               ??___lmul 0009           UART1_Init@data 0001        UART2_Write@length 0003  
      wifi_write@newline 0010           UART2_Init@data 0001              ?_wifi_write 0007  
          __pcstackBANK1 0100      __size_of_laser_init 003A      __size_of_laser_read 00EA  
           UART1_Write@c 0001             UART1_Write@i 0005                 ?___lldiv 0001  
           UART2_Write@c 0001             UART2_Write@i 0006            ??_UART1_Write 0005  
          ??_UART2_Write 0005         __CFG_PRICLKEN$ON 000000            _uart_1_data_p 0032  
          _uart_2_data_p 0034      __size_of_move_motor 0084                 _LATAbits 000F89  
               _PIR1bits 000F9E                 _PIR3bits 000FA4      __size_of_wifi_write 0040  
       __CFG_WDTPS$32768 000000                main@total 0020      __end_of_UART1_Write 7A7A  
    __end_of_UART2_Write 7AB4        ___lmul@multiplier 0001             ??_laser_init 0008  
           ??_laser_read 000C                 __Hrparam 0000                 __Lrparam 0000  
     __CFG_BOREN$SBORDIS 000000        __CFG_P2BMX$PORTD2 000000         __size_of___lldiv 0086  
               __ptext10 7BE6                 __ptext11 7B84       __end_of_laser_init 7AEE  
     __end_of_laser_read 7E3C            __size_of_main 01C4             ??_move_motor 0001  
            _UART1_Write 7A4C              _UART2_Write 7A7A             ??_wifi_write 000B  
        wifi_write@total 0007       __end_of_move_motor 7CCC          wifi_write@write 000C  
       ___lldiv@dividend 0001               _RCSTA1bits 000FAB               _RCSTA2bits 000F71  
     __end_of_wifi_write 7B2E               _UART1_Init 7B84               _UART2_Init 7BE6  
             _UART2_Read 7A2C         ___lldiv@quotient 000A        __CFG_T3CMX$PORTC0 000000  
